package main.view;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

import main.controller.VehicleController;
import main.utility.JDBCUtil;

public class PanelUpdateDelete extends javax.swing.JPanel {

    /**
     * Creates new form panelCreate
     */
    public PanelUpdateDelete() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNopol = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnGet = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        labelNopol1 = new javax.swing.JLabel();
        txtNopol1 = new javax.swing.JTextField();
        txtNopol2 = new javax.swing.JTextField();
        txtNopol3 = new javax.swing.JTextField();
        labelWarna = new javax.swing.JLabel();
        txtWarna = new javax.swing.JTextField();
        labelNB = new javax.swing.JLabel();
        txtNB = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(500, 520));

        labelNopol.setText("Masukan ID *");

        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnGet.setText("Get");
        btnGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
        jLabel1.setText("Update / Delete Data");

        labelNopol1.setText("No Polisi *");

        txtNopol1.setEnabled(false);
        txtNopol1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNopol1KeyTyped(evt);
            }
        });

        txtNopol2.setEnabled(false);
        txtNopol2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNopol2KeyTyped(evt);
            }
        });

        txtNopol3.setEnabled(false);
        txtNopol3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNopol3KeyTyped(evt);
            }
        });

        labelWarna.setText("Warna *");

        txtWarna.setEnabled(false);

        labelNB.setText("Nama / Brand");

        txtNB.setEnabled(false);

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(labelWarna, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(130, 130, 130)
                            .addComponent(txtWarna, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(labelNB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtNB, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(labelNopol)
                    .addComponent(labelNopol1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGet, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNopol1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNopol2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNopol3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGet, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelNopol)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNopol1)
                    .addComponent(txtNopol1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNopol2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNopol3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtWarna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelWarna))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNB)
                    .addComponent(txtNB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnReset)
                    .addComponent(btnDelete))
                .addContainerGap(282, Short.MAX_VALUE))
        );

        txtNopol1.setDocument(new UpperCaseDocument());
        txtNopol3.setDocument(new UpperCaseDocument());
    }// </editor-fold>//GEN-END:initComponents

    private void btnGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetActionPerformed
        try {
            String id = txtId.getText();
            if (id.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Isi ID");
                return;
            }

            Connection conn = JDBCUtil.getConnection();
            PreparedStatement stmnt = conn.prepareStatement("SELECT * FROM vehicles WHERE id = ?");
            stmnt.setInt(1, Integer.parseInt(id));
            ResultSet res = stmnt.executeQuery();

            if (!res.next()) {
                JOptionPane.showMessageDialog(this, "Data tidak ditemukan");
                return;
            }

            JOptionPane.showMessageDialog(this, "Data ditemukan");

            String nopol = res.getString("nopol");
            String[] split = nopol.split("_");
            String nb = res.getString("name_or_brand"),
                    warna = res.getString("color");

            txtNopol1.setEnabled(true);
            txtNopol2.setEnabled(true);
            txtNopol3.setEnabled(true);
            txtWarna.setEnabled(true);
            txtNB.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnDelete.setEnabled(true);
            txtId.setEnabled(false);

            txtNopol1.setText(split[0]);
            txtNopol2.setText(split[1]);
            txtNopol3.setText(split[2]);
            txtWarna.setText(warna);
            txtNB.setText(nb);

        } catch (SQLException ex) {
            Logger.getLogger(PanelUpdateDelete.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGetActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            if (txtNopol1.getText().isEmpty() || txtNopol2.getText().isEmpty() || txtNopol3.getText().isEmpty() || txtWarna.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Isi semua form");
                return;
            }

            int option = JOptionPane.showConfirmDialog(this, "Data akan di update");
            if (option == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(this, "Data tidak di update");

            } else if (option == JOptionPane.YES_OPTION) {

                String id = txtId.getText(),
                        warna = txtWarna.getText(),
                        nb = txtNB.getText();

                String nopol = txtNopol1.getText() + "_" + txtNopol2.getText() + "_" + txtNopol3.getText();
                Connection conn = JDBCUtil.getConnection();
                PreparedStatement stmnt = conn.prepareStatement("UPDATE vehicles SET nopol = ?, color = ?, name_or_brand = ? WHERE id = ?");
                stmnt.setString(1, nopol);
                stmnt.setString(2, warna);
                stmnt.setString(3, nb);
                stmnt.setInt(4, Integer.parseInt(id));

                int excUpdate = stmnt.executeUpdate();
                if (excUpdate == 1) {
                    JOptionPane.showMessageDialog(this, "Data berhasil di update");
                } else {
                    JOptionPane.showMessageDialog(this, "Data gagal di update");
                }

                btnResetActionPerformed(evt);

                stmnt.close();
                conn.close();

            } else {

            }

        } catch (SQLException ex) {
            Logger.getLogger(PanelUpdateDelete.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtNopol1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNopol1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
        if (txtNopol1.getText().length() > 1) {
            evt.consume();
            txtNopol2.requestFocus();
        }
    }//GEN-LAST:event_txtNopol1KeyTyped

    private void txtNopol2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNopol2KeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == java.awt.event.KeyEvent.VK_BACK_SPACE) || (c == java.awt.event.KeyEvent.VK_DELETE))) {
            evt.consume();
        }
        if (txtNopol2.getText().length() == 4) {
            evt.consume();
            txtNopol3.requestFocus();
        }
    }//GEN-LAST:event_txtNopol2KeyTyped

    private void txtNopol3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNopol3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
        if (txtNopol3.getText().length() > 2) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNopol3KeyTyped

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtNopol1.setEnabled(false);
        txtNopol2.setEnabled(false);
        txtNopol3.setEnabled(false);
        txtWarna.setEnabled(false);
        txtNB.setEnabled(false);
        btnUpdate.setEnabled(false);
        txtId.setEnabled(true);

        txtId.setText("");
        txtNopol1.setText("");
        txtNopol2.setText("");
        txtNopol3.setText("");
        txtWarna.setText("");
        txtNB.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            String id = txtId.getText();

            int option = JOptionPane.showConfirmDialog(this, "Data akan dihapus");
            if (option == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(this, "Data tidak dihapus");

            } else if (option == JOptionPane.YES_OPTION) {

                String nopol = txtNopol1.getText() + "_" + txtNopol2.getText() + "_" + txtNopol3.getText();
                Connection conn = JDBCUtil.getConnection();
                PreparedStatement stmnt = conn.prepareStatement("DELETE FROM vehicles WHERE id = ?");

                stmnt.setInt(1, Integer.parseInt(id));

                int excDelete = stmnt.executeUpdate();
                if (excDelete == 1) {
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                } else {
                    JOptionPane.showMessageDialog(this, "Data gagal dihapus");
                }

                btnResetActionPerformed(evt);

                stmnt.close();
                conn.close();

            } else {

            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelUpdateDelete.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void updateTable() {

    }

    // Membuat kelas yang meng-override kelas AbstractDocument
    public static class UpperCaseDocument extends PlainDocument {

        @Override
        public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
            if (str == null) {
                return;
            }
            super.insertString(offs, str.toUpperCase(), a);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnGet;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelNB;
    private javax.swing.JLabel labelNopol;
    private javax.swing.JLabel labelNopol1;
    private javax.swing.JLabel labelWarna;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNB;
    private javax.swing.JTextField txtNopol1;
    private javax.swing.JTextField txtNopol2;
    private javax.swing.JTextField txtNopol3;
    private javax.swing.JTextField txtWarna;
    // End of variables declaration//GEN-END:variables
}
